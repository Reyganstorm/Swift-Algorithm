# Зачем изучать алгоритмы и структуры данных?

Если вы занимаетесь программированием какое-то время, вы можете задаться вопросом, какой смысл изучать алгоритмы и структуры данных, особенно если у вас нет формального образования в области информатики или инженерии.

В конце концов, как часто вам на самом деле приходится использовать связанный список или писать собственную процедуру сортировки при создании приложений? Ответ: почти никогда.

#### **Однако...**

Небольшие знания о стратегиях, используемых алгоритмами для решения сложных задач, дадут вам идеи для улучшения, которые вы можете внести в свой собственный код.

Знание большего количества структур данных, чем просто стандартный массив и словарь, дает вам большую коллекцию инструментов, которые вы можете использовать для создания собственных приложений.

Это сделает вас лучшим разработчиком! (А лучшие разработчики зарабатывают больше $$$.)

#### Алгоритмы позволяют создавать программное обеспечение, которое иначе было бы невозможно создать

Были приложения, которые я не мог создать в прошлом, потому что застрял на фундаментальных проблемах.

Часто это был вопрос скорости: я просто не мог заставить программу работать достаточно быстро. Вспоминая об этом сейчас, я выбрал неправильные алгоритмы для этих задач. Если бы я знал больше о разнице между **O(n)** и **O(n^2)**, возможно, мне повезло бы больше.

Наивные решения грубой силы прекрасно работают с небольшими объемами данных, но иногда вам нужно иметь дело с большим количеством данных. И тогда вам нужны более умные алгоритмы.

Были также времена, когда я вообще не мог решить свои проблемы с программированием, даже медленно. Я просто не знал, с чего начать. Понимание теории алгоритмов дает вам различные тактики, которые вы можете попробовать.

#### Don't spend any time memorizing algorithms

That's not the point. Instead, try to understand how different algorithms approach different problems.

Learn about techniques such as divide-and-conquer, dynamic programming, greedy algorithms. See what makes one approach slow and another fast, and learn what the tradeoffs are.

The key thing here is to get insight in how we can make computers do things.

#### It's not as scary as it sounds

A lot of algorithm textbooks start with a bunch of math. Truth is, the math is useful but most of the time you won't need it. So don't let that scare you. If you can write code, you can also understand all these fancy algorithms and data structures.

Trust me, algorithms are fun. :-)

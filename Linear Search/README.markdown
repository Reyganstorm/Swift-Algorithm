# Линейный поиск

Цель: Найти конкретное значение в массиве.

У нас есть массив объектов. В линейном поиске мы перебираем все объекты в массиве и сравниваем каждый с объектом, который мы ищем. Если два объекта совпадают, мы останавливаемся и возвращаем текущий индекс массива. Если нет, продолжаем искать следующий объект, пока не пройдем все элементы в массиве.

## Пример

Допустим, у нас есть массив чисел `[5, 2, 4, 7]`, и мы хотим проверить, содержит ли он число `2`.

Мы начинаем с сравнения первого числа в массиве, `5`, с искомым числом `2`. Очевидно, что они не равны, поэтому переходим к следующему элементу массива.

Затем мы сравниваем число `2` из массива с нашим числом `2` и замечаем, что они совпадают. Теперь мы можем остановиться и вернуть `1` — индекс числа `2` в массиве.

## Код

Простая реализация линейного поиска на Swift:

```swift
func linearSearch<T: Equatable>(_ array: [T], _ object: T) -> Int? {
  for (index, obj) in array.enumerated() where obj == object {
    return index
  }
  return nil
}
```

Разместите этот код в Playground и протестируйте его следующим образом:

```swift
let array = [5, 2, 4, 7]
linearSearch(array, 2)  // Вернет 1
```

## Производительность

Линейный поиск работает за O(n). Он сравнивает искомый объект с каждым объектом в массиве, поэтому время выполнения пропорционально длине массива. В худшем случае нам нужно проверить все элементы массива.

Производительность в лучшем случае — O(1), но этот случай редок, так как объект должен находиться в начале массива, чтобы его сразу найти. Вам может повезти, но чаще всего не повезет. В среднем линейный поиск проверяет половину объектов в массиве.

## См. также

[Linear search on Wikipedia](https://en.wikipedia.org/wiki/Linear_search)

*Written by [Patrick Balestra](http://www.github.com/BalestraPatrick)*
